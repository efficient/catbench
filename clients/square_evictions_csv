#!/bin/sh

has_trailing_switches() {
	local found=1
	for trailing in "$@"
	do
		case "$trailing" in
		-*)
			found=0
			;;
		esac
	done
	return "$found"
}

header=""
record=""

seen_hugepages="false"
seen_randomize="false"
seen_singlerng="false"
seen_logprfchr="false"
seen_profmemac="false"
seen_daemonize="false"

jaguar_script="../jaguar/jaguar"
outfile_json="$1"
shift

[ -e "$outfile_json" ] || "$jaguar_script" init "$outfile_json"

while [ $# -gt 0 ]
do
	lastheader="$header"

	switch="$1"
	shift

	case "$switch" in
	-n*)
		header="$header,passes_per_phase"
		"$jaguar_script" set "$outfile_json" legend.args.-n.description string "passes per phase";
		"$jaguar_script" set "$outfile_json" legend.args.-n.unit string "";
		;;
	-p*)
		header="$header,phases_per_period"
		"$jaguar_script" set "$outfile_json" legend.args.-p.description string "phases per period";
		"$jaguar_script" set "$outfile_json" legend.args.-p.unit string "";
		;;
	-c*)
		header="$header,contracted_way_percent"
		"$jaguar_script" set "$outfile_json" legend.args.-c.description string "contracted percentage";
		"$jaguar_script" set "$outfile_json" legend.args.-c.unit string "";
		;;
	-e*)
		header="$header,expanded_allocation_way_percent"
		"$jaguar_script" set "$outfile_json" legend.args.-e.description string "expanded percentage";
		"$jaguar_script" set "$outfile_json" legend.args.-e.unit string "";
		;;
	-h*)
		seen_hugepages="true"
		"$jaguar_script" set "$outfile_json" legend.args.-h.description string "hugepages";
		"$jaguar_script" set "$outfile_json" legend.args.-h.unit string "bool";
		;;
	-r*)
		seen_randomize="true"
		"$jaguar_script" set "$outfile_json" legend.args.-r.description string "randomized";
		"$jaguar_script" set "$outfile_json" legend.args.-r.unit string "bool";

		case "$1" in
		-*)
			;;
		*)
			shift
			;;
		esac
		continue
		;;
	-s*)
		seen_singlerng="true"
		"$jaguar_script" set "$outfile_json" legend.args.-s.description string "single RNG";
		"$jaguar_script" set "$outfile_json" legend.args.-s.unit string "";
		;;
	-l*)
		seen_logprfchr="true"
		"$jaguar_script" set "$outfile_json" legend.args.-l.description string "log perf characteristics";
		"$jaguar_script" set "$outfile_json" legend.args.-l.unit string "";

		case "$1" in
		-*)
			;;
		*)
			shift
			;;
		esac
		continue
		;;
	-j*)
		header="$header,log_entries_per_pass"
		"$jaguar_script" set "$outfile_json" legend.args.-j.description string "perf logging frequency";
		"$jaguar_script" set "$outfile_json" legend.args.-j.unit string "accesses";
		;;
	-m*)
		seen_profmemac="true"
		"$jaguar_script" set "$outfile_json" legend.args.-m.description string "Use rdtscp";
		"$jaguar_script" set "$outfile_json" legend.args.-m.unit string "bool";
		;;
	-a*)
		header="$header,accesses_per_activation"
		"$jaguar_script" set "$outfile_json" legend.args.-a.description string "accesses per activation";
		"$jaguar_script" set "$outfile_json" legend.args.-a.unit string "bool";
		;;
	-b*)
		header="$header,rng_period_offset"
		"$jaguar_script" set "$outfile_json" legend.args.-a.description string "accesses per activation";
		"$jaguar_script" set "$outfile_json" legend.args.-a.unit string "bool";
		;;
	-i*)
		seen_daemonize="true"
		"$jaguar_script" set "$outfile_json" legend.args.-i.description string "daemonized";
		"$jaguar_script" set "$outfile_json" legend.args.-i.unit string "bool";
		;;
	*)
		if has_trailing_switches "$@"
		then
			echo "Unexpected switch: $switch" >&2
			exit 1
		fi

		for pair in "$switch" "$@"
		do
			if ! ( echo "$pair" | grep : >/dev/null )
			then
				echo "Expected a pair instead of: $pair" >&2
				exit 1
			fi

			header="$header,`echo -n "$pair" | rev | cut -d: -f2- | rev`"
			record="$record,`echo -n "$pair" | rev | cut -d: -f1 | rev`"
		done
		break
		;;
	esac

	suffix="`printf %s "$switch" | sed 's/..\(.*\)/\1/'`"
	case "$suffix" in
	[a-z]*)
		set -- "-$suffix" "$@"
		;;
	*)
		if [ "$header" = "$lastheader" ]
		then
			continue
		fi

		if [ -n "$suffix" ]
		then
			record="$record,$suffix"
		else
			record="$record,$1"
			shift
		fi
		;;
	esac
done

header="$header,hugepages,randomize,singlerng,log_performance_characteristics,profile_memory_accesses,daemonize"
record="$record,$seen_hugepages,$seen_randomize,$seen_singlerng,$seen_logprfchr,$seen_profmemac,$seen_daemonize"

echo "$header\n$record" | sed 's/,//'
