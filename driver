#!/bin/sh

logging_commence() {
	mkfifo "$dir/pipe.tmp"
	tee "$dir/$0.log" <"$dir/pipe.tmp" &
	set -v
	exec >"$dir/pipe.tmp" 2>&1
}

logging_cleanup() {
	set +v
	rm "$dir/pipe.tmp"
	tar cf "$dir.tar" --force-local "$dir" && rm -r "$dir"
}

if [ $# -lt 1 ]
then
	cat <<-tac
		USAGE: $0 <command token>...

		Prepend $0 to the full command-line invokation of another script
		or program to log its environment, invocation, and interactions.

		If shell actions are provided (in escaped form so your own shell
		doesn't eat them, of course), they will be interpreted. To add
		files to the archive, place them in the \\\$dir directory.
	tac
	exit 127
fi

dir="catbench-`basename $1`_`date +%F_%H-%M-%S_%z`"
mkdir "$dir"

logging_commence

if ! git log --oneline --no-abbrev-commit --decorate -1
then
	exit 127
fi
git status -uno
git submodule status
git diff --ignore-submodules HEAD >"$dir/`git log --oneline --abbrev-commit --no-decorate -1 | cut -d" " -f1`.patch"

uname -a
cp "/boot/config-`uname -r`" "$dir"

echo "$ $@"
eval "$@"
status="$?"

logging_cleanup

exit "$status"
