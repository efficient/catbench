#!/bin/sh

enable_cat=false
logfile_name="lockserver_log"

lockserver_alloc_percent=100
trash_alloc_percent=100

traverse_subset=0

num_trash=8
signal_iters=1

while [ $# -ge 1 ]
do
	case "$1" in
	"-c")
		enable_cat=true
		;;
	"-o")
		logfile_name="$2"
		shift
		;;
	"-l")
		lockserver_alloc_percent="$2"
		shift
		;;
	"-t")
		trash_alloc_percent="$2"
		shift
		;;
	"-s")
		traverse_subset="$2"
		shift
		;;
	"-n")
		num_trash="$2"
		shift
		;;
	"-i")
		signal_iters="$2"
		shift
		;;
	*)
		echo "Invalid argument"
		exit 1
	esac
	shift
done

cgroup_path="/sys/fs/cgroup/intel_rdt"

# Default value should be the OR of trash_mask and lockserver_mask if $enable_cat is true
trash_mask=0xfff
lockserver_mask=0x001

if "$enable_cat"
then
	trash_mask=0xffe
fi

mkdir $cgroup_path/trash
echo $trash_mask > $cgroup_path/trash/intel_rdt.l3_cbm
#by doing this, our child processes are automatically added to the trash cgroup
echo $$ > $cgroup_path/trash/tasks

# This is the lockserver
clients/square_evictions -n 10000 -p 1 -c "$lockserver_alloc_percent" -e "$lockserver_alloc_percent" -hr -ia "$traverse_subset" -v > "$logfile_name" &
rawpid=`while ! (ps | grep square); do true; done`
pid=`echo $rawpid | cut -d " " -f1`

if "$enable_cat"
then
	mkdir $cgroup_path/lockserver
	echo $pid > $cgroup_path/lockserver/tasks
	echo $lockserver_mask > $cgroup_path/lockserver/intel_rdt.l3_cbm
fi


for var in `seq 1 "$num_trash"`; do
	clients/square_evictions -c "$trash_alloc_percent" -e "$trash_alloc_percent" -h > /dev/null &
done
sleep 10

for var in `seq 1 "$signal_iters"`
do
	kill -s 10 $pid
	usleep 100
done

# Sleep to allow our processes to actually run for a little while
sleep 2

# CLEANUP
killall square_evictions
cgdelete intel_rdt:trash
if "$enable_cat"
then
	cgdelete intel_rdt:lockserver
fi
