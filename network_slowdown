#!/bin/sh

. ./postprocess.sh

reuse legend.samples.table_entries.description string
reuse legend.samples.table_entries.unit string
jaguar/jaguar set "$outfile" legend.samples.slowdown_factor.description string "Resulting slowdown factor"
jaguar/jaguar set "$outfile" legend.samples.slowdown_factor.unit string ""
jaguar/jaguar set "$outfile" data.introducing_contenders.description string "Adding contending processes without CAT"
jaguar/jaguar set "$outfile" data.turning_off_cat.description string "Turning off CAT with contending processes"

elem="0"
while bounds baseline "$elem"
do
	jaguar/jaguar get "$infile" data.baseline.samples[$elem].table_entries
	reuse data.baseline.samples[$elem].table_entries integer data.introducing_contenders.samples[$elem].table_entries
	reuse data.baseline.samples[$elem].table_entries integer data.turning_off_cat.samples[$elem].table_entries
	introducing_contenders="`echo "$(sample round_trip_time contention "$elem") / $(sample round_trip_time baseline "$elem")" | bc -l`"
	jaguar/jaguar set "$outfile" data.introducing_contenders.samples[$elem].slowdown_factor fraction "$introducing_contenders"
	turning_off_cat="`echo "$(sample round_trip_time contention "$elem") / $(sample round_trip_time allocation "$elem")" | bc -l`"
	jaguar/jaguar set "$outfile" data.turning_off_cat.samples[$elem].slowdown_factor fraction "$turning_off_cat"
	elem=$((elem + 1))
done
