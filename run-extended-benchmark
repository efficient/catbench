#!/bin/sh

logfilename="$CATBENCH_JAGFILE"
if [ -z "$logfilename" ]
then
	cat >&2 <<-tac
		$0: should be invoked via driver
	tac
	exit 1
fi

traverse=0
iters=1
if [ $# -eq 2 ]
then
	echo "I hear you like choppier lockservers, bro. Here comes one!"
	traverse="$1"
	iters="$2"
fi

jaguar/jaguar set "$logfilename" legend.samples.trash_percent.description string "Allocation size of non-lockserver processes"
jaguar/jaguar set "$logfilename" legend.samples.trash_percent.unit string "KB"
jaguar/jaguar set "$logfilename" legend.samples.no_cat.description string "Time per memory access"
jaguar/jaguar set "$logfilename" legend.samples.no_cat.unit string "s"
jaguar/jaguar set "$logfilename" legend.samples.with_cat.description string "Time per memory access"
jaguar/jaguar set "$logfilename" legend.samples.with_cat.unit string "s"

lockserver_mask="0x003"
trash_mask="0xffc"

cache_way_size="$((`cat /sys/devices/system/cpu/cpu0/cache/index3/number_of_sets /sys/devices/system/cpu/cpu0/cache/index3/coherency_line_size | paste -sd* | bc` / 1024))"

for lockserver_percent in 50 100
do
	lock_kb=$((cache_way_size * lockserver_percent / 100))
	jaguar/jaguar set "$logfilename" "data.l${lock_kb}k.description" string "Lockserver ${lock_kb}k"
	lines="integer,fraction,fraction\ntrash_percent,with_cat,no_cat"
	for trash_percent in 50 100 200 400 800
	do
		echo "Lockserver%: $lockserver_percent, Trash%: $trash_percent, Trash: $num_trash"
		trash_kb=$((cache_way_size * trash_percent / 100))
		control="`sudo CATBENCH_JAGFILE="$CATBENCH_JAGFILE" ./lockserver-driver -o no-cat.dat -l "$lockserver_percent" -d "l${lock_kb}k" -t "$trash_percent" -s "$traverse" -i "$iters"`"
		experimental="`sudo CATBENCH_JAGFILE="$CATBENCH_JAGFILE" ./lockserver-driver -c -m "$lockserver_mask" -p "$trash_mask" -o with-cat.dat -l "$lockserver_percent" -d "l$l{lock_kb}k" -t "$trash_percent" -s "$traverse" -i "$iters"`"
		lines="$lines\n`printf "%d,%s,%s\n" "$trash_kb" "$control" "$experimental"`"
	done
	echo "$lines" | jaguar/jaguar set "$logfilename" "data.l${lock_kb}k.samples" array -
done
